($!
     ____ __     ____   ___    ____ __         (((((()
    | |_  \ \  /   ) ) | |  ) | |_  \ \  /  \(@)- /
    |_|__  \_\/  __)_) |_|_/  |_|__  \_\/   /(@)- \
                                               ((())))

($set CLASS_PATH "/sys/class/msensor")
($set CLASS_FOLDER_PREF "sensor")
($set CLASS_ID ($unq CLASS_FOLDER_PREF))
($set CLASS_TITLE "sensor")

($dict CLASS_TYPE
	(` CLASS_TYPE_NAME        CLASS_TYPE_MODES )
	(`
	(  "ev3-analog-XX"        (` "EV3-ANALOG" ))
	(  "nxt-analog"           (` "NXT-ANALOG-0" "NXT-ANALOG-1" ))
	(  "nxt-i2c"              (` "I2C-U8" "I2C-S8" "I2C-S16" ))
	(  "ht-nxt-color"         (` "HT-COL1-COL" "HT-COL1-RED" "HT-COL1-GRN" "HT-COL1-BLU" "HT-COL1-RAW" "HT-COL1-NRM" "HT-COL1-ALL" ))
	(  "ht-nxt-angle"         (` "HT-ANG-DEG2" "HT-ANG-ACC" "HT-ANG-RPM" "HT-ANG-RSET" ))
	(  "ht-nxt-accel"         (` "HT-ACCL" "HT-ACCL-ALL" ))
	(  "ht-nxt-barometric"    (` "HT-BAR-PRES" "HT-BAR-TEMP" ))
	(  "ht-nxt-color-v2"      (` "HT-COL2-COL" "HT-COL2-RED" "HT-COL2-GRN" "HT-COL2-BLU" "HT-COL2-WHT" "HT-COL2-NRM" "HT-COL2-ALL" "HT-COL2-RAW" ))
	(  "ht-nxt-eopd"          (` "HT-EOPD-L" "HT-EOPD-S" ))
	(  "ht-nxt-force"         (` "HT-FORCE" ))
	(  "ht-nxt-gyro"          (` "HT-GYRO" ))
	(  "ht-nxt-ir-link"       (` "HT-IRLINK" ))
	(  "ht-nxt-ir-receiver"   (` "HT-IRRECV" "HT-IRRECV-8" ))
	(  "ht-nxt-pir"           (` "HT-PIR" ))
	(  "ht-nxt-compass"       (` "HT-CMP-DEG2" ))
	(  "ht-nxt-mag"           (` "HT-MAG" ))
	(  "ht-nxt-ir-seeker-v2"  (` "HT-DIR-DC" "HT-DIR-AC" "HT-DIR-DALL" "HT-DIR-AALL" ))
	(  "ht-nxt-smux"          (` "HT-SMUX-RUN" "HT-SMUX-DETECT" "HT-SMUX-HALT" ))
	(  "ht-super-pro"         (` "HT-SPRO-AIN" "HT-SPRO-DIN" "HT-SPRO-DOT" "HT-SPRO-DCT" "HT-SPRO-STB" "HT-SPRO-LED" "HT-SPRO-AO0" "HT-SPRO-AO1" ))
	(  "ev3-uart-30"          (` "US-DIST-CM" "US-DIST-IN" "US-LISTEN" "US-SI-CM" "US-SI-IN" "US-DC-CM" "US-DC-IN" ))
	(  "ev3-uart-32"          (` "GYRO-ANG" "GYRO-RATE" "GYRO-FAS" "GYRO-G&A" "GYRO-CAL" ))
	(  "ev3-uart-29"          (` "COL-REFLECT" "COL-AMBIENT" "COL-AMBIENT" "REF-RAW" "RGB-RAW" "COL-CAL" ))
	(  "lego-ev3-touch"       (` "TOUCH" ))
	(  "ev3-uart-33"          (` "IR-PROX" "IR-SEEK" "IR-REMOTE" "IR-REM-A" "IR-S-ALT" "IR-CAL" ))
	(  "lego-power-storage"   (` "ES-IN-VOLT" "ES-IN-AMP" "ES-OUT-VOLT" "ES-OUT-AMP" "ES-JOULE" "ES-IN-WATT" "ES-OUT-WATT" "ES-ALL" ))
	(  "tmp275"               (`))
	(  "lego-nxt-touch"       (` "TOUCH" ))
	(  "lego-nxt-light"       (` "NXT-REFLECT" "NXT-AMBIENT" ))
	(  "lego-nxt-sound"       (` "NXT-SND-DB" "NXT-SND_DBA" ))
	(  "lego-nxt-ultrasonic"  (` "NXT-US-CM" "NXT-US-IN" "NXT-US-SI-CM" "NXT-US-SI-IN" "NXT-US-LIST" ))
	(  "ms-light-array"       (` "MS-LSA-CAL" "MS-LSA-RAW" "MS-LSA-C-W" "MS-LSA-C-B" "MS-LSA-C-A" "MS-LSA-C-E" "MS-LSA-C-U" ))
	(  "ms-8ch-servo"         (` "MS-8CH-SERVO-V3" "MS-8CH-SERVO" ))
	(  "pcf8574"              (`))
	(  "pcf8591"              (`))
	(  "ds1307"               (`))
	(  "ms-nxt-touch-mux"     (` "TOUCH-MUX" ))
	)
)

($set R  0)
($set RW 1)
($set W  2)

($dict CLASS_ATTR
	(` CLASS_ATTR_NAME    CLASS_ATTR_TYPE  CLASS_ATTR_ARRAY  CLASS_ATTR_WRITE  )
	(`
	(  "bin_data"         byte             2                 RW                )
	(  "bin_data_format"  char             1                 R                 )
	(  "dp"               dword            0                 R                 )
	(  "fw_version"       char             1                 R                 )
	(  "address"          byte             0                 R                 )
	(  "mode"             char             1                 RW                )
	(  "modes"            char             1                 R                 )
	(  "name"             char             1                 R                 )
	(  "num_values"       dword            0                 R                 )
	(  "poll_ms"          dword            0                 RW                )
	(  "port_name"        char             1                 R                 )
	(  "units"            char             1                 R                 )
	(  "value0"           float            0                 R                 )
	(  "value1"           float            0                 R                 )
	(  "value2"           float            0                 R                 )
	(  "value3"           float            0                 R                 )
	(  "value4"           float            0                 R                 )
	(  "value5"           float            0                 R                 )
	(  "value6"           float            0                 R                 )
	(  "value7"           float            0                 R                 )
	)
)

($dict CLASS_AVEC
	(` CLASS_AVEC_NAME  CLASS_AVEC_SIZE  CLASS_AVEC_TYPE  CLASS_AVEC_ARRAY  CLASS_AVEC_WRITE  )
	(`
	(  "value"          8                int              0                 0                 )
	)
)

($set CLASS_TYPE_ATTR "type" ? ($ne ($index CLASS_ATTR_NAME "type") -1) | "name")
($set CLASS_ADDR_INX ($index CLASS_ATTR_NAME "address"))

($dict CLASS_DESC
	(` CLASS_DESC_ID  CLASS_DESC_TYPE  CLASS_DESC_COMMENT  )
	(`
	(  type_inx       uint8_t          "type"              )
	(  port           uint8_t          "EV3 port"          )
	(  extport        uint8_t          "extended port"     )
	(  addr           uint8_t          "address"           ) ? ($ne ($CLASS_ADDR_INX) -1)
	)
)

($set CLASS_TYPE_ID ($each-CLASS_TYPE \i.($replace,,($unq ($i CLASS_TYPE_NAME)),,-,,_)))
($set CLASS_ATTR_ID ($each-CLASS_ATTR \i.($unq ($i CLASS_ATTR_NAME))))
($set CLASS_AVEC_ID ($each-CLASS_AVEC \i.($unq ($i CLASS_AVEC_NAME))))
