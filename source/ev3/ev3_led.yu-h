($!
     ____ __     ____   ___    ____ __         (((((()
    | |_  \ \  /   ) ) | |  ) | |_  \ \  /  \(@)- /
    |_|__  \_\/  __)_) |_|_/  |_|__  \_\/   /(@)- \
                                               ((())))

($import "app.yu")
($TITLE,,EV3 LEDs.)

($import stdlib)
($import h)

($h-begin-named)

#include <stddef.h>
#include <stdint.h>
#include <stdbool.h>

($extern-c-begin)

/**
 *  \defgroup ev3_led LEDs
 *  \brief Access to EV3 LEDs.
 *  \{
 */

($import "ev3_led-dict.yu")

/**
 *  \brief Identifiers of LEDs.
 */
enum {
	($LED_ID \i.]
		($upper ($i)),

	[ )
	LED__COUNT_  /**< Count of EV3 LEDs. */
};

/**
 *  \brief Trigger indexes of LEDs.
 */
enum {
	($LED_TRIGGER_ID \i.]
		TRIGGER_($i),

	[ )
	TRIGGER__COUNT_  /**< Count of EV3 triggers. */
};

($define,,LED_ATTR__COUNT_,,($len LED_ATTR_ID))

($each-LED_ATTR \i.]
	extern const char * const led_attr_($i LED_ATTR_ID)[];
	/**
	 *  \brief Get ($q ($i LED_ATTR_ID)) attribute of the LED.
	 *  \param id Identifier of the LED.
	 *  \param[out] buf Buffer for result.
	 ($[*  \param sz Buffer size.] ? ($i LED_ATTR_ARRAY))
	 *  \return Count of read bytes.
	 */
	($h-extern) size_t get_led_($i LED_ATTR_ID)( uint8_t id, ($i LED_ATTR_TYPE) *buf($[, size_t sz] ? ($i LED_ATTR_ARRAY)) );

	/**
	 *  \brief Set ($q ($i LED_ATTR_ID)) attribute of the LED.
	 *  \param id Identifier of the LED.
	 *  \param value Attribute value.
	 *  \return Count of written bytes.
	 */
	($h-extern) size_t set_led_($i LED_ATTR_ID)( uint8_t id, ($i LED_ATTR_TYPE) ($[*] ? ($i LED_ATTR_ARRAY))value );

[ )

/**
 *  \brief Triggers of LEDs.
 */
extern const char * const led_trigger[];

/**
 *  \brief Get "trigger" attribute (index) of the LED.
 *  \param id Identifier of the LED.
 *  \return Index of trigger or TRIGGER__COUNT_ - error has occurred.
 */
($h-extern) uint8_t get_led_trigger_inx( uint8_t id );

/**
 *  \brief Set "trigger" attribute of the LED by index.
 *  \param id Identifier of the LED.
 *  \param inx Index of trigger.
 *  \return Count of written bytes.
 */
($h-extern) size_t set_led_trigger_inx( uint8_t id, uint8_t inx );

/** \} */

($extern-c-end)

($h-end)
